<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_801107_library_m_books</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_801107_library_m_books">assigned_toVALCHANGES^assigned_toISNOTEMPTY^EQ<item endquery="false" field="assigned_to" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="assigned_to" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Eligibility</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
	try{
		var lu = new LibraryUtils();
		var eligible = lu.checkEligibility(current.assigned_to, current.table_name);
		if(!eligible){
			gs.addErrorMessage(lu.errorMessage(current.assigned_to, current.table_name));
			current.assigned_by = "";
			current.assigned_date_time = "";
			current.assigned_to = "";
			current.available = true;
			current.setAbortAction(true);
		}
		if(eligible){
			if(!current.assigned_by){
				current.assigned_by = gs.getUserID();
			}
			current.assigned_date_time = lu.nowDateTime();
			current.return_date_time = lu.dueDateTime(current.table_name);
			current.available = false;
		}
	}catch(err){
		gs.addErrorMessage("check eligibility", err);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-22 04:30:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0efe18674785a1104f7fee38436d430d</sys_id>
        <sys_mod_count>37</sys_mod_count>
        <sys_name>Check Eligibility</sys_name>
        <sys_overrides/>
        <sys_package display_value="Library Management" source="x_801107_library_m">33e049d247c521104f7fee38436d4377</sys_package>
        <sys_policy/>
        <sys_scope display_value="Library Management">33e049d247c521104f7fee38436d4377</sys_scope>
        <sys_update_name>sys_script_0efe18674785a1104f7fee38436d430d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-02 13:35:31</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0efe18674785a1104f7fee38436d430d"/>
</record_update>
